{"ast":null,"code":"import { ref, watch, onBeforeMount, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue';\nimport History from '../../history.js';\nimport { vmHasRouter } from '../../utils/private/vm.js';\nlet counter = 0;\nexport const useFullscreenProps = {\n  fullscreen: Boolean,\n  noRouteFullscreenExit: Boolean\n};\nexport const useFullscreenEmits = ['update:fullscreen', 'fullscreen'];\nexport default function () {\n  const vm = getCurrentInstance();\n  const {\n    props,\n    emit,\n    proxy\n  } = vm;\n  let historyEntry, fullscreenFillerNode, container;\n  const inFullscreen = ref(false);\n  vmHasRouter(vm) === true && watch(() => proxy.$route.fullPath, () => {\n    props.noRouteFullscreenExit !== true && exitFullscreen();\n  });\n  watch(() => props.fullscreen, v => {\n    if (inFullscreen.value !== v) {\n      toggleFullscreen();\n    }\n  });\n  watch(inFullscreen, v => {\n    emit('update:fullscreen', v);\n    emit('fullscreen', v);\n  });\n\n  function toggleFullscreen() {\n    if (inFullscreen.value === true) {\n      exitFullscreen();\n    } else {\n      setFullscreen();\n    }\n  }\n\n  function setFullscreen() {\n    if (inFullscreen.value === true) {\n      return;\n    }\n\n    inFullscreen.value = true;\n    container = proxy.$el.parentNode;\n    container.replaceChild(fullscreenFillerNode, proxy.$el);\n    document.body.appendChild(proxy.$el);\n    counter++;\n\n    if (counter === 1) {\n      document.body.classList.add('q-body--fullscreen-mixin');\n    }\n\n    historyEntry = {\n      handler: exitFullscreen\n    };\n    History.add(historyEntry);\n  }\n\n  function exitFullscreen() {\n    if (inFullscreen.value !== true) {\n      return;\n    }\n\n    if (historyEntry !== void 0) {\n      History.remove(historyEntry);\n      historyEntry = void 0;\n    }\n\n    container.replaceChild(proxy.$el, fullscreenFillerNode);\n    inFullscreen.value = false;\n    counter = Math.max(0, counter - 1);\n\n    if (counter === 0) {\n      document.body.classList.remove('q-body--fullscreen-mixin');\n\n      if (proxy.$el.scrollIntoView !== void 0) {\n        setTimeout(() => {\n          proxy.$el.scrollIntoView();\n        });\n      }\n    }\n  }\n\n  onBeforeMount(() => {\n    fullscreenFillerNode = document.createElement('span');\n  });\n  onMounted(() => {\n    props.fullscreen === true && setFullscreen();\n  });\n  onBeforeUnmount(exitFullscreen); // expose public methods\n\n  Object.assign(proxy, {\n    toggleFullscreen,\n    setFullscreen,\n    exitFullscreen\n  });\n  return {\n    inFullscreen,\n    toggleFullscreen\n  };\n}","map":{"version":3,"names":["ref","watch","onBeforeMount","onMounted","onBeforeUnmount","getCurrentInstance","History","vmHasRouter","counter","useFullscreenProps","fullscreen","Boolean","noRouteFullscreenExit","useFullscreenEmits","vm","props","emit","proxy","historyEntry","fullscreenFillerNode","container","inFullscreen","$route","fullPath","exitFullscreen","v","value","toggleFullscreen","setFullscreen","$el","parentNode","replaceChild","document","body","appendChild","classList","add","handler","remove","Math","max","scrollIntoView","setTimeout","createElement","Object","assign"],"sources":["C:/Users/BangJun/Desktop/VUE練習/app/node_modules/quasar/src/composables/private/use-fullscreen.js"],"sourcesContent":["import { ref, watch, onBeforeMount, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue'\n\nimport History from '../../history.js'\nimport { vmHasRouter } from '../../utils/private/vm.js'\n\nlet counter = 0\n\nexport const useFullscreenProps = {\n  fullscreen: Boolean,\n  noRouteFullscreenExit: Boolean\n}\n\nexport const useFullscreenEmits = [ 'update:fullscreen', 'fullscreen' ]\n\nexport default function () {\n  const vm = getCurrentInstance()\n  const { props, emit, proxy } = vm\n\n  let historyEntry, fullscreenFillerNode, container\n  const inFullscreen = ref(false)\n\n  vmHasRouter(vm) === true && watch(() => proxy.$route.fullPath, () => {\n    props.noRouteFullscreenExit !== true && exitFullscreen()\n  })\n\n  watch(() => props.fullscreen, v => {\n    if (inFullscreen.value !== v) {\n      toggleFullscreen()\n    }\n  })\n\n  watch(inFullscreen, v => {\n    emit('update:fullscreen', v)\n    emit('fullscreen', v)\n  })\n\n  function toggleFullscreen () {\n    if (inFullscreen.value === true) {\n      exitFullscreen()\n    }\n    else {\n      setFullscreen()\n    }\n  }\n\n  function setFullscreen () {\n    if (inFullscreen.value === true) {\n      return\n    }\n\n    inFullscreen.value = true\n    container = proxy.$el.parentNode\n    container.replaceChild(fullscreenFillerNode, proxy.$el)\n    document.body.appendChild(proxy.$el)\n\n    counter++\n    if (counter === 1) {\n      document.body.classList.add('q-body--fullscreen-mixin')\n    }\n\n    historyEntry = {\n      handler: exitFullscreen\n    }\n    History.add(historyEntry)\n  }\n\n  function exitFullscreen () {\n    if (inFullscreen.value !== true) {\n      return\n    }\n\n    if (historyEntry !== void 0) {\n      History.remove(historyEntry)\n      historyEntry = void 0\n    }\n\n    container.replaceChild(proxy.$el, fullscreenFillerNode)\n    inFullscreen.value = false\n\n    counter = Math.max(0, counter - 1)\n\n    if (counter === 0) {\n      document.body.classList.remove('q-body--fullscreen-mixin')\n\n      if (proxy.$el.scrollIntoView !== void 0) {\n        setTimeout(() => { proxy.$el.scrollIntoView() })\n      }\n    }\n  }\n\n  onBeforeMount(() => {\n    fullscreenFillerNode = document.createElement('span')\n  })\n\n  onMounted(() => {\n    props.fullscreen === true && setFullscreen()\n  })\n\n  onBeforeUnmount(exitFullscreen)\n\n  // expose public methods\n  Object.assign(proxy, {\n    toggleFullscreen,\n    setFullscreen,\n    exitFullscreen\n  })\n\n  return {\n    inFullscreen,\n    toggleFullscreen\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}